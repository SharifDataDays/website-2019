# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2019-01-30 18:25
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('game', '0022_auto_20180306_0258'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Instruction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=200)),
                ('app', models.CharField(max_length=200)),
                ('level', models.CharField(choices=[('difficult', 'difficult'), ('medium', 'medium'), ('easy', 'easy')], max_length=200)),
                ('number', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='PhaseInstructionSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stmt', models.CharField(max_length=500)),
                ('correct_answer', models.CharField(max_length=200)),
                ('max_score', models.FloatField(default=0, null=True)),
                ('type', models.CharField(blank=True, choices=[('multiple_choice', 'multiple_choice'), ('single_answer', 'single_answer'), ('multiple_answer', 'multiple_answer'), ('single_sufficient_answer', 'single_sufficient_answer'), ('single_number', 'single_number'), ('interval_number', 'interval_number'), ('file_upload', 'file_upload')], max_length=200)),
                ('ui_type', models.CharField(blank=True, choices=[('text_number', 'text_number'), ('text_string', 'text_string'), ('choices', 'choices'), ('multiple', 'multiple'), ('file', 'file')], max_length=200)),
                ('level', models.CharField(blank=True, choices=[('difficult', 'difficult'), ('medium', 'medium'), ('easy', 'easy')], max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionSubmission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(default=0, max_length=1000)),
                ('score', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Trial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(null=True)),
                ('end_time', models.DateTimeField(null=True)),
                ('submit_time', models.DateTimeField(null=True)),
                ('score', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='TrialSubmission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(default=0)),
            ],
        ),
        migrations.RemoveField(
            model_name='participant',
            name='content_type',
        ),
        migrations.RemoveField(
            model_name='participant',
            name='submission',
        ),
        migrations.RemoveField(
            model_name='competition',
            name='type',
        ),
        migrations.AddField(
            model_name='competition',
            name='current_trial_id',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='competition',
            name='end_time',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='competition',
            name='start_time',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='competition',
            name='trial_duration',
            field=models.IntegerField(null=True),
        ),
        migrations.CreateModel(
            name='FileUploadQuestion',
            fields=[
                ('question_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='game.Question')),
                ('download_url', models.CharField(max_length=200)),
                ('upload_url', models.CharField(max_length=200)),
                ('answer_file', models.FileField(null=True, upload_to=models.CharField(max_length=200))),
                ('is_chosen', models.BooleanField(default=False)),
            ],
            bases=('game.question',),
        ),
        migrations.CreateModel(
            name='IntervalQuestion',
            fields=[
                ('question_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='game.Question')),
                ('min_range', models.FloatField()),
                ('max_range', models.FloatField()),
            ],
            bases=('game.question',),
        ),
        migrations.CreateModel(
            name='MultipleAnswerQuestion',
            fields=[
                ('question_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='game.Question')),
            ],
            bases=('game.question',),
        ),
        migrations.CreateModel(
            name='MultipleChoiceQuestion',
            fields=[
                ('question_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='game.Question')),
            ],
            bases=('game.question',),
        ),
        migrations.AddField(
            model_name='trialsubmission',
            name='competition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Competition'),
        ),
        migrations.AddField(
            model_name='trialsubmission',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trialSubmissions', to='game.TeamParticipatesChallenge'),
        ),
        migrations.AddField(
            model_name='trialsubmission',
            name='trial',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='game.Trial'),
        ),
        migrations.AddField(
            model_name='trial',
            name='competition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Competition'),
        ),
        migrations.AddField(
            model_name='trial',
            name='questions',
            field=models.ManyToManyField(blank=True, to='game.Question'),
        ),
        migrations.AddField(
            model_name='trial',
            name='team',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trials', to='game.TeamParticipatesChallenge'),
        ),
        migrations.AddField(
            model_name='questionsubmission',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Question'),
        ),
        migrations.AddField(
            model_name='questionsubmission',
            name='trialSubmission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questionSubmissions', to='game.TrialSubmission'),
        ),
        migrations.AddField(
            model_name='phaseinstructionset',
            name='phase',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='game.Competition'),
        ),
        migrations.AddField(
            model_name='instruction',
            name='phase_instruction_set',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.PhaseInstructionSet'),
        ),
        migrations.AddField(
            model_name='choice',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='game.MultipleChoiceQuestion'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.MultipleAnswerQuestion'),
        ),
    ]
